// index.ts

// =========== Import ==========
import express, { NextFunction, Request, Response } from "express";
import cors from "cors";
import dotenv from "dotenv";
import { requestLogger } from "./v1/middleware/logger.middleware";
import helmet from "helmet";
import multer from "multer";

// Route
import userRouter from "./v1/routes/user.route"; 
// Import Routes Here (DON'T DELETE THIS COMMENT)

// =========== Init ==========

// Init Environment
dotenv.config();
const PORT = process.env.PORT || 3001;

// Init Express
const app = express();

// =========== Utils ==========

// parse requests of content-type: application/json
// parses incoming requests with JSON payloads
app.use(express.json({ limit: "30mb" }));
app.use(express.urlencoded({ extended: true, limit: "30mb" }));

// enabling cors for all requests by using cors middleware
app.use(cors());
// Enable pre-flight
app.options("*", cors());
// Security
app.use(helmet());
// Request logger
app.use(requestLogger); 

// =========== Routes ==========

// Main
app.get("/", (req: Request, res: Response) => {
  res.send("Welcome to {{ projectName }} ðŸš€");
}); 

app.use("/api/v1/users/", userRouter); 
// Use Routes Here (DON'T DELETE THIS COMMENT)

// Error handling middleware
app.use((err: Error, req: Request, res: Response, next: NextFunction) => {
  console.error(err);
  res.status(500).json({
    status: 500,
    data: null,
    message:
      err.message && err.message.length < 100
        ? err.message
        : "Internal Server Error",
  });
});

// 404 error
app.all("*", (req: Request, res: Response, next: NextFunction) => {
  res.status(404).json({
    status: 404,
    data: null,
    message: "Page Not Found",
  });
});

// =========== Start ==========

console.log("App is starting...");

// listen for requests
app.listen(PORT, () => {
  console.log(`ðŸš€App listening on http://localhost:${PORT}`);
});
